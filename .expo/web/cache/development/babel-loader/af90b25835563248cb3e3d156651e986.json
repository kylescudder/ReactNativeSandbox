{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\BeerApp\\\\components\\\\Content.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./Styles\";\nimport NonceButton from \"./NonceButton\";\n\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n\n  var _super = _createSuper(Content);\n\n  function Content(props) {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    _this = _super.call(this, props);\n    _this._toggle = _this._toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"_onPressGiveName\",\n    value: function _onPressGiveName(title) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.contentText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, \"Off he goes, noncing again.\"), React.createElement(Text, {\n        style: styles.contentText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, \"Oh well, that's just... \", Button.title, \" for you\"), React.createElement(NonceButton, {\n        onPress: this._onPressGiveName,\n        title: \"Josh\",\n        color: \"#841584\",\n        accessibilityLabel: \"Josh is a nonce!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nexport { Content as default };\n;","map":{"version":3,"sources":["D:/Documents/BeerApp/components/Content.js"],"names":["React","Component","styles","NonceButton","Content","props","_toggle","bind","title","content","contentText","Button","_onPressGiveName"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,WAAP;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AAHe;AAIhB;;;;qCACcC,K,EAAO,CAEvB;;;6BACQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA0DC,MAAM,CAACH,KAAjE,aAFJ,EAGI,oBAAC,WAAD;AACI,QAAA,OAAO,EAAE,KAAKI,gBADlB;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,kBAAkB,EAAC,kBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAYH;;;;EAtBgCX,S;;SAAhBG,O;AAuBpB","sourcesContent":["import React, {Component} from 'react';\r\nimport { Text, View, Button, Alert } from 'react-native';\r\nimport styles from './Styles';\r\nimport NonceButton from './NonceButton';\r\n\r\nexport default class Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this._toggle = this._toggle.bind(this);\r\n      } \r\n    _onPressGiveName(title) {\r\n           \r\n    }\r\n    render() {\r\n        return(\r\n            <View style={styles.content}>\r\n                <Text style={styles.contentText}>Off he goes, noncing again.</Text>\r\n                <Text style={styles.contentText}>Oh well, that's just... {Button.title} for you</Text>\r\n                <NonceButton\r\n                    onPress={this._onPressGiveName}\r\n                    title=\"Josh\"\r\n                    color=\"#841584\"\r\n                    accessibilityLabel=\"Josh is a nonce!\"\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}