{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Documents\\\\BeerApp\\\\components\\\\Content.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./Styles\";\n\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n\n  var _super = _createSuper(Content);\n\n  function Content() {\n    _classCallCheck(this, Content);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Content, [{\n    key: \"_onPressGiveName\",\n    value: function _onPressGiveName(title) {\n      console.log(title);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.contentText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, \"Off he goes, noncing again.\"), React.createElement(Text, {\n        style: styles.contentText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, \"Oh well, that's just... \", Button.title, \" for you\"), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this._onPressGiveName('Josh');\n        },\n        title: \"Josh\",\n        color: \"#841584\",\n        accessibilityLabel: \"Josh is a nonce!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nexport { Content as default };\n;","map":{"version":3,"sources":["D:/Documents/BeerApp/components/Content.js"],"names":["React","Component","styles","Content","title","console","log","content","contentText","Button","_onPressGiveName"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,OAAOC,MAAP;;IAEqBC,O;;;;;;;;;;;;;qCACCC,K,EAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;;6BACQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA0DC,MAAM,CAACL,KAAjE,aAFJ,EAGI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACM,gBAAL,CAAsB,MAAtB,CAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAE,MAFX;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,kBAAkB,EAAC,kBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAYH;;;;EAjBgCT,S;;SAAhBE,O;AAkBpB","sourcesContent":["import React, {Component} from 'react';\r\nimport { Text, View, Button, Alert } from 'react-native';\r\nimport styles from './Styles'\r\n\r\nexport default class Content extends Component {\r\n     _onPressGiveName(title) {\r\n        console.log(title)    \r\n    }\r\n    render() {\r\n        return(\r\n            <View style={styles.content}>\r\n                <Text style={styles.contentText}>Off he goes, noncing again.</Text>\r\n                <Text style={styles.contentText}>Oh well, that's just... {Button.title} for you</Text>\r\n                <Button\r\n                    onPress={() => this._onPressGiveName('Josh')}\r\n                    title= \"Josh\"\r\n                    color=\"#841584\"\r\n                    accessibilityLabel=\"Josh is a nonce!\"\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}